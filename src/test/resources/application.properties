spring.quartz.job-store-type=memory
management.endpoints.web.exposure.include=health,info,metrics

spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.url=jdbc:h2:mem:db;DB_CLOSE_DELAY=-1
spring.datasource.username=sa
spring.datasource.password=sa

# profiles
#     gpio-rpi : default profile, connecting the connected objects to the raspberry pi GPIO
#     fake-rpi : connecting the connected objects to a fake implementation, it's useful to test the application on a PC
spring.profiles.default=gpio-fake

camera.path.root = ./photos
camera.width = 1920
camera.height = 1080
camera.encoding = PNG
camera.quality = 100
camera.delay = 1000
camera.rotation = 180
camera.brightness = 60

# take picture every 3600000 ms (1 hour)
camera.scheduler.delay.in.milliseconds = 3600000

diskspace.scheduler.delay.in.milliseconds = 10800000

door.opening.duration = 8000
door.closing.duration = 2700
# position
#  0 -> stop
#  5 -> turning clockwise
#  16 -> turning counter-clockwise
door.opening.position = 16
door.closing.position = 5

# every 60000 ms (1 minute) verifies if there is a task related to the sun time (sunrise or sunset)
suntime.scheduler.delay.in.milliseconds=60000
suntime.scheduler.light.on.time_before_sunset=0
suntime.scheduler.light.off.time_after_sunset=20
suntime.scheduler.door.close.time_after_sunset=15
suntime.scheduler.door.open.time_after_sunrise=0
suntime.latitude = 34.886306
suntime.longitude = 134.379711
suntime.zoneId=Asia/Tokyo

door.button.bottom.gpio.address = 15
door.button.up.gpio.address = 18
door.servo.gpio.address = 25
door.servo.gpio.range = 100
birdhouse.button.gpio.address = 24

light.relay.enabled = true
light.relay.gpio.address = 14

# light security timer : 2 / 35 / 60 minutes
light.security.timer.delay.eco = 120000
light.security.timer.delay.regular = 2100000
light.security.timer.delay.sunny = 3600000

fan.relay.enabled = true
fan.relay.gpio.address = 23

# fan are playing 1 minutes in winter (eco mode)
# 10 seconds
fan.security.timer.delay.eco = 10000
# 1 minute
fan.security.timer.delay.regular = 60000
# 20 minutes
fan.security.timer.delay.sunny = 1200000

fan.scheduler.delay.in.milliseconds = 3600000

sensor.python.command = /bin/echo
sensor.python.script = Temp=24.9*
sensor.python.arg1 = Humidity=57.6%
sensor.python.arg2 =
sensor.scheduler.delay.in.milliseconds = 3600000
sensor.cache.delay = 10000

# openweather service url with 3 parameters {} replaced with latitude, longitude and key.
weather.info.url = http://api.openweathermap.org/data/2.5/weather?lat={latitude}&lon={longitude}&units=metric&appid={key}
weather.info.key = -1
weather.info.enabled = true

# TODO : move these messages in a message bundle
email.notification.to = test@me.com
spring.mail.username = test@me.com
email.notification.enabled = true

# Other properties
spring.mail.properties.mail.debug=true
spring.mail.properties.mail.transport.protocol=smtp
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000

# TLS , port 587
spring.mail.properties.mail.smtp.starttls.enable=true

# SSL, post 465
#spring.mail.properties.mail.smtp.socketFactory.port = 465
#spring.mail.properties.mail.smtp.socketFactory.class = javax.net.ssl.SSLSocketFactory

music.enabled = true
music.path.mix = src/test/resources/music
music.path.rooster = src/test/resources/music
music.player.start.cmd = /bin/echo
music.player.suffle.param = test

music.volume.cmd = /bin/echo
music.volume.arg1 = set
music.volume.arg2 = PCM
music.volume.max = 100%
music.volume.regular = 60%

# playing music for 20 / 40 / 60 minutes
music.security.timer.delay.eco = 1200000
music.security.timer.delay.regular = 2400000
music.security.timer.delay.sunny = 3600000

play.cocorico.at.sunrise.enabled = true
play.song.at.sunset = true

camera.scheduler.by.night = false

# override these parameters
security.user.name = admin
security.user.password = password
security.guest.name = guest
security.guest.password = guest

machine.shutdown.eco = true
wifi.disabled.eco = true

machine.shutdown.sunny = false
wifi.disabled.sunny = false

machine.shutdown.regular = false
wifi.disabled.regular = false

wifi.switch.enabled = true

consumption.mode.eco.days.around.winter.solstice = 25
consumption.mode.sunny.days.around.summer.solstice = 100
consumption.mode.eco.force = false
