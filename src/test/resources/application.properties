spring.quartz.job-store-type=memory
management.endpoints.web.exposure.include=health,info,metrics

spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.url=jdbc:h2:mem:db;DB_CLOSE_DELAY=-1
spring.datasource.username=sa
spring.datasource.password=sa

# profiles
#     gpio-rpi : default profile, connecting the connected objects to the raspberry pi GPIO
#     fake-rpi : connecting the connected objects to a fake implementation, it's useful to test the application on a PC
spring.profiles.default=gpio-fake

camera.path.root = ./photos
camera.width = 1920
camera.height = 1080
camera.encoding = PNG
camera.quality = 100
camera.delay = 1000
camera.rotation = 180

door.opening.duration = 8000
door.closing.duration = 3000
# position
#  0 -> stop
#  5 -> turning clockwise
#  16 -> turning counter-clockwise
door.opening.position = 16
door.closing.position = 5

# every 60000 ms (1 minute) verifies if there is a task related to the sun time (sunrise or sunset)
suntime.scheduler.delay.in.milliseconds=60000
suntime.scheduler.light.on.time_before_sunset=0
suntime.scheduler.light.off.time_after_sunset=20
suntime.scheduler.door.close.time_after_sunset=15
suntime.scheduler.door.open.time_after_sunrise=5
suntime.latitude = 34.886306
suntime.longitude = 134.379711
suntime.zoneId=Asia/Tokyo

door.button.bottom.gpio.address = 16
door.servo.gpio.address = 6
door.servo.gpio.range = 100

light.relay.enabled = true
light.relay.gpio.address = 15

sensor.python.command = /bin/echo
sensor.python.script = Temp=24.9*
sensor.python.arg1 = Humidity=57.6%
sensor.python.arg2 =
sensor.scheduler.delay.in.milliseconds = 3600000
sensor.cache.delay = 10000

# openweather service url with 3 parameters {} replaced with latitude, longitude and key.
weather.info.url = http://api.openweathermap.org/data/2.5/weather?lat={latitude}&lon={longitude}&units=metric&appid={key}
weather.info.key = -1
weather.info.enabled = true

# TODO : move these messages in a message bundle
email.notification.to = test@me.com
spring.mail.username = test@me.com
email.notification.enabled = true
email.notification.sunset.subject = closing 

# Other properties
spring.mail.properties.mail.debug=true
spring.mail.properties.mail.transport.protocol=smtp
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000

# TLS , port 587
spring.mail.properties.mail.smtp.starttls.enable=true

# SSL, post 465
#spring.mail.properties.mail.smtp.socketFactory.port = 465
#spring.mail.properties.mail.smtp.socketFactory.class = javax.net.ssl.SSLSocketFactory