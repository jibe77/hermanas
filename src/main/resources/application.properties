spring.quartz.job-store-type=memory
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

info.app.name=Hermanas
info.app.description=Chicken coop automation
info.java-vendor = ${java.specification.vendor}

info.app.encoding=@project.build.sourceEncoding@
info.app.java.source=@java.version@
info.app.java.target=@java.version@

# profiles
#     gpio-rpi : default profile, connecting the connected objects to the raspberry pi GPIO
#     fake-rpi : connecting the connected objects to a fake implementation, it's useful to test the application on a PC
spring.profiles.default=gpio-rpi

camera.path.root = ./photos
camera.rotation = 180
camera.scheduler.by.night = false
camera.encoding = PNG
camera.brightness = 60

camera.high.width = 1920
camera.high.height = 1080
camera.high.quality = 100
camera.high.delay = 3000

camera.regular.width = 480
camera.regular.height = 270
camera.regular.quality = 75
camera.regular.delay = 1500

camera.streaming.command = /usr/local/bin/mjpg_streamer -i '/usr/local/lib/mjpg-streamer/input_raspicam.so -x 320 -y 180 -vf -hf -br 60 -fps 3' -o '/usr/local/lib/mjpg-streamer/output_http.so -p 8081'
spring.mvc.async.request-timeout = 3600000

# take picture every 3600000 ms (1 hour)
camera.scheduler.delay.in.milliseconds = 3600000

door.opening.duration = 5500
door.closing.duration = 2350
# position
#  0 -> stop
#  5 -> turning clockwise
#  16 -> turning counter-clockwise
door.opening.position = 16
door.closing.position = 5

# every 60000 ms (1 minute) verifies if there is a task related to the sun time (sunrise or sunset)
suntime.scheduler.delay.in.milliseconds=60000
suntime.scheduler.light.on.time_before_sunset=0
suntime.scheduler.door.close.time_after_sunset=30
suntime.scheduler.door.open.time_after_sunrise=5
# GPS position of the chicken coop (by default, it is located in Paris at the Eiffel tower !)
suntime.latitude = 48.858370
suntime.longitude = 2.294481

door.button.bottom.gpio.address = 16
door.servo.gpio.address = 6
door.servo.gpio.range = 100
birdhouse.button.gpio.address = 5

light.relay.enabled = true
light.relay.gpio.address = 15

# light security timer : 2 / 35 / 60 minutes
light.security.timer.delay.eco = 120000
light.security.timer.delay.regular = 2100000
light.security.timer.delay.sunny = 3600000

fan.relay.enabled = true
fan.relay.gpio.address = 4
# fan are playing 1 minutes in winter (eco mode)
# 10 seconds
fan.security.timer.delay.eco = 10000
# 1 minute
fan.security.timer.delay.regular = 60000
# 20 minutes
fan.security.timer.delay.sunny = 1200000

fan.scheduler.delay.in.milliseconds = 3600000

sensor.scheduler.delay.in.milliseconds = 3600000
# it takes a few seconds to returns the temperature and humidity values, timeout set to 10 secondes
sensor.python.command = /usr/bin/python
sensor.python.script = /home/pi/AdafruitDHT.py
sensor.python.arg1 = 22
sensor.python.arg2 = 4
sensor.cache.delay = 30000

# openweather service url with 3 parameters {} replaced with latitude, longitude and key.
weather.info.url = http://api.openweathermap.org/data/2.5/weather?lat={latitude}&lon={longitude}&units=metric&appid={key}
weather.info.key = to-override-in-application-properties-file
weather.info.enabled = false

email.notification.enabled=false
email.notification.to=to-override-in-application-properties-file@gmail.com
email.notification.sunset.subject = Sunset notif: door is closed

spring.mail.host=smtp.gmail.com
spring.mail.port=25
spring.mail.username=to-override-in-application-properties-file@gmail.com

# Other properties
spring.mail.properties.mail.debug=true
spring.mail.properties.mail.transport.protocol=smtp
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000

# TLS , port 587
spring.mail.properties.mail.smtp.starttls.enable=true

# SSL, post 465
spring.mail.properties.mail.smtp.socketFactory.port = 465
spring.mail.properties.mail.smtp.socketFactory.class = javax.net.ssl.SSLSocketFactory

music.enabled = true
music.path.mix = /home/pi/music/mix
music.path.rooster = /home/pi/music/rooster
music.player.start.cmd=/usr/bin/cvlc
music.player.nodisp.param = --no-video
music.player.shuffle.param = -Z

music.volume.cmd = /usr/bin/amixer
music.volume.arg1 = set
music.volume.arg2 = PCM
music.volume.max = 100%
music.volume.regular = 78%
# playing music for 20 / 40 / 60 minutes
music.security.timer.delay.eco = 1200000
music.security.timer.delay.regular = 2400000
music.security.timer.delay.sunny = 3600000

play.cocorico.at.sunrise.enabled = true
play.song.at.sunset = true

# override these parameters
security.user.name = admin
security.user.password = password
security.guest.name = guest
security.guest.password = guest